@startuml

interface cookingReferenceRetriever{
    public Map<String, CookingReference> retrieveFromIngredient(String ingredient);
}
class AdapterCookingRef{
    private String id;
    private List<String> requirements;
    private String instructions;
    public CookingReference()
     String id()
     List<String> requirements()
     String instructions()
}

class GrossBouf{
        private static Recipe r1 ;
        private static Recipe r2 ;
        private static Map<String, Recipe> references;
        public List<Recipe> find(String ingredient)

}

class Marmitor{
        private static Recette r1;
        private static Map<String, Recette> recettes;
        public List<Recette> rechercher(String ingredient)
}
class Recette{
    private String nom;
        private Set<String> ingredients;
        private String description;

        public Recette(String nom, Set<String> ingredients, String description)

        public String nom()

        public Set<String> ingredients()

        public String description()
}

class Recipe {
    private String identifier;
        private Map<String, Integer> ingredients;
        private List<String> steps;

        public Recipe(String identifier, Map<String, Integer> ingredients, List<String> steps)

        public String identifier()

        public Map<String, Integer> ingredients()

        public List<String> steps()
}

class Client{

}
  cookingReferenceRetriever <|-- Client
GrossBouf --> Recipe
Marmitor --> Recette
cookingReferenceRetriever <|.. AdapterCookingRef
GrossBouf <|.. AdapterCookingRef
 Marmitor <|.. AdapterCookingRef
@enduml